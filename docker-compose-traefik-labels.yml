services:
  app:
    image: beardedtek/newsfeed:latest
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - NEXTAUTH_URL=https://newsfeed.${BASE_DOMAIN}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - CASDOOR_ENDPOINT=${CASDOOR_ENDPOINT}
      - CASDOOR_CLIENT_ID=${CASDOOR_CLIENT_ID}
      - CASDOOR_CLIENT_SECRET=${CASDOOR_CLIENT_SECRET}
      - CASDOOR_CERTIFICATE=${CASDOOR_CERTIFICATE}
      - FRESHRSS_URL=${FRESHRSS_URL}
      - FRESHRSS_API_USER=${FRESHRSS_API_USER}
      - FRESHRSS_API_PASSWORD=${FRESHRSS_API_PASSWORD}
      - REDIS_URL=redis://redis:6379
      - OLLAMA_URL=${OLLAMA_URL}
      - OLLAMA_MODEL=${OLLAMA_MODEL}
    depends_on:
      - db
      - casdoor
      - freshrss
      - redis
    networks:
      - app-network
      - casdoor-network
      - traefik-tailscale
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=traefik-tailscale'
      - 'traefik.http.routers.newsfeed.rule=Host(`newsfeed.${BASE_DOMAIN}`)'
      - 'traefik.http.routers.newsfeed.entryPoints=https'
      - 'traefik.http.routers.newsfeed.tls=true'
      - 'traefik.http.routers.newsfeed.tls.certresolver=dns01-tailscale'
      - "traefik.http.routers.newsfeed.service=newsfeed-entrypoint"
      - 'traefik.http.services.newsfeed-entrypoint.loadbalancer.server.port=8080'

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=newsfeed
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  freshrss-db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=freshrss
      - POSTGRES_PASSWORD=freshrss
      - POSTGRES_DB=freshrss
    volumes:
      - freshrss_postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  casdoor:
    image: casbin/casdoor:latest
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./casdoor/app.conf:/conf/app.conf
      - ./casdoor/init_data.json:/conf/init_data.json
    depends_on:
      - casdoor-db
    networks:
      - traefik-tailscale
      - app-network
      - casdoor-network
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=traefik-tailscale'
      - 'traefik.http.routers.casdoor.rule=Host(`casdoor.${BASE_DOMAIN}`)'
      - 'traefik.http.routers.casdoor.entryPoints=https'
      - 'traefik.http.routers.casdoor.tls=true'
      - 'traefik.http.routers.casdoor.tls.certresolver=dns01-tailscale'
      - "traefik.http.routers.casdoor.service=casdoor-entrypoint"
      - 'traefik.http.services.casdoor-entrypoint.loadbalancer.server.port=8080'

  casdoor-db:
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=casdoor
    volumes:
      - casdoor_postgres_data:/var/lib/postgresql/data
    networks:
      - casdoor-network

  freshrss:
    image: linuxserver/freshrss:latest
    ports:
      - "8080:80"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - FRESHRSS_DB_TYPE=pgsql
      - FRESHRSS_DB_HOST=freshrss-db
      - FRESHRSS_DB_USER=freshrss
      - FRESHRSS_DB_PASSWORD=freshrss
      - FRESHRSS_DB_BASE=freshrss
    volumes:
      - freshrss_data:/config
    depends_on:
      - freshrss-db
      - db
    networks:
      - app-network
      - traefik-tailscale
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=traefik-tailscale'
      - 'traefik.http.routers.freshrss.rule=Host(`freshrss.${BASE_DOMAIN}`)'
      - 'traefik.http.routers.freshrss.entryPoints=https'
      - 'traefik.http.routers.freshrss.tls=true'
      - 'traefik.http.routers.freshrss.tls.certresolver=dns01-tailscale'
      - "traefik.http.routers.freshrss.service=freshrss-entrypoint"
      - 'traefik.http.services.freshrss-entrypoint.loadbalancer.server.port=8080'

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - app-network

networks:
  traefik-tailscale:
    external: true
  app-network:
    driver: bridge
  casdoor-network:
    driver: bridge

volumes:
  postgres_data:
  freshrss_data:
  freshrss_postgres_data:
  casdoor_postgres_data: