services:
  app:
    image: beardedtek/newsfeed:latest
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - env/app
    depends_on:
      - db
      - backend
    networks:
      - newsfeed

  backend:
    image: beardedtek/newsfeed-backend:latest
    restart: always
    build:
      context: ./backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8001
    env_file:
      - env/backend
    depends_on:
      - redis
    networks:
      - newsfeed

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "8880:80"
    volumes:
      - ./nginx/proxy.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
      - backend
    networks:
      - newsfeed

  worker:
    image: beardedtek/newsfeed-backend:latest
    restart: always
    command: ["celery", "-A", "app.workers.tasks", "worker", "--loglevel=info", "--concurrency=2"]
    env_file:
      - env/backend
    depends_on:
      - redis
      - backend
    networks:
      - newsfeed

  beat:
    image: beardedtek/newsfeed-backend:latest
    restart: always
    command: celery -A app.workers.tasks.celery_app beat --loglevel=info
    env_file:
      - env/backend
    depends_on:
      - redis
      - worker
      - backend
    networks:
      - newsfeed

  db:
    image: postgres:15-alpine
    restart: always
    env_file:
      - env/backend
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - newsfeed

  redis:
    image: redis:7-alpine
    restart: always
    command: ["redis-server", "--maxmemory", "512mb", "--maxmemory-policy", "allkeys-lru"]
    networks:
      - newsfeed

networks:
  newsfeed:
    external: true

volumes:
  postgres_data:
